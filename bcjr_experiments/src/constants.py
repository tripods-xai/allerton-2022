from dataclasses import dataclass
import string
import numpy as np
import tensorflow as tf

EPSILON = 1e-9
RECORDS_SEP = "__"
ALPHABET = string.ascii_lowercase + string.digits
TURBOAE_EXACT_PATH = "../turboae_models/test_tae.npy"

# TurboAE
TURBOAE_INTERLEAVER_PERMUTATION = tf.constant(
    [
        26,
        86,
        2,
        55,
        75,
        93,
        16,
        73,
        54,
        95,
        53,
        92,
        78,
        13,
        7,
        30,
        22,
        24,
        33,
        8,
        43,
        62,
        3,
        71,
        45,
        48,
        6,
        99,
        82,
        76,
        60,
        80,
        90,
        68,
        51,
        27,
        18,
        56,
        63,
        74,
        1,
        61,
        42,
        41,
        4,
        15,
        17,
        40,
        38,
        5,
        91,
        59,
        0,
        34,
        28,
        50,
        11,
        35,
        23,
        52,
        10,
        31,
        66,
        57,
        79,
        85,
        32,
        84,
        14,
        89,
        19,
        29,
        49,
        97,
        98,
        69,
        20,
        94,
        72,
        77,
        25,
        37,
        81,
        46,
        39,
        65,
        58,
        12,
        88,
        70,
        87,
        36,
        21,
        83,
        9,
        96,
        67,
        64,
        47,
        44,
    ],
    dtype=tf.int32,
)

# TurboAE Approximated
@dataclass
class AffineTurboSpec:
    weights: tf.Tensor
    bias: tf.Tensor


TURBOAE_APPROXIMATED_CODE1_BITS_3_98 = AffineTurboSpec(
    weights=tf.constant([[1, 1, 1, 1, 1], [1, 1, 1, 0, 1]]), bias=tf.constant([1, 0])
)
# Note this is slightly different from one for isit paper
TURBOAE_APPROXIMATED_CODE2_BITS_3_98 = AffineTurboSpec(
    weights=tf.constant([[0, 1, 0, 1, 1]]), bias=tf.constant([0])
)
TURBOAE_APPROXIMATED_CODE2_BITS_3_98 = AffineTurboSpec(
    weights=tf.constant([[0, 1, 0, 1, 1]]), bias=tf.constant([0])
)
TURBOAE_APPROXIMATED_SOLUTION2_CODE2_BITS_3_98 = AffineTurboSpec(
    weights=tf.constant([[0, 1, 1, 1, 1]]), bias=tf.constant([1])
)

TURBOAE_EXACT_TABLE1_BITS_1_1 = tf.constant(
    [
        [1, 1],
        [1, 0],
        [1, 1],
        [1, 0],
        [0, 0],
        [0, 1],
        [0, 0],
        [0, 1],
        [1, 1],
        [1, 0],
        [1, 1],
        [1, 0],
        [0, 0],
        [0, 1],
        [0, 0],
        [0, 1],
        [1, 1],
        [1, 0],
        [1, 1],
        [1, 0],
        [0, 0],
        [0, 1],
        [0, 0],
        [0, 1],
        [1, 1],
        [1, 0],
        [1, 1],
        [1, 0],
        [0, 0],
        [0, 1],
        [0, 0],
        [0, 1],
    ],
    dtype=tf.float32,
)

TURBOAE_EXACT_TABLE1_BITS_2_2 = tf.constant(
    [
        [1, 1],
        [1, 0],
        [1, 1],
        [1, 0],
        [0, 0],
        [0, 1],
        [0, 0],
        [0, 1],
        [1, 1],
        [1, 0],
        [1, 1],
        [1, 0],
        [0, 0],
        [0, 1],
        [0, 0],
        [0, 1],
        [1, 1],
        [1, 0],
        [1, 1],
        [1, 0],
        [0, 0],
        [0, 1],
        [0, 0],
        [0, 1],
        [1, 1],
        [1, 0],
        [1, 1],
        [1, 0],
        [0, 0],
        [0, 1],
        [0, 0],
        [0, 1],
    ],
    dtype=tf.float32,
)

TURBOAE_EXACT_TABLE1_BITS_99_99 = tf.constant(
    [
        [1, 1],
        [1, 1],
        [1, 1],
        [1, 1],
        [0, 0],
        [0, 0],
        [0, 0],
        [0, 0],
        [1, 1],
        [1, 1],
        [1, 1],
        [1, 1],
        [0, 0],
        [0, 0],
        [0, 0],
        [0, 0],
        [1, 0],
        [1, 0],
        [1, 0],
        [1, 0],
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 1],
        [1, 0],
        [1, 0],
        [1, 0],
        [1, 0],
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 1],
    ],
    dtype=tf.float32,
)

TURBOAE_EXACT_TABLE1_BITS_100_100 = tf.constant(
    [
        [1, 1],
        [1, 1],
        [1, 1],
        [1, 1],
        [0, 0],
        [0, 0],
        [0, 0],
        [0, 0],
        [1, 1],
        [1, 1],
        [1, 1],
        [1, 1],
        [0, 0],
        [0, 0],
        [0, 0],
        [0, 0],
        [1, 0],
        [1, 0],
        [1, 0],
        [1, 0],
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 0],
        [0, 0],
        [0, 0],
        [0, 0],
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 1],
    ],
    dtype=tf.float32,
)

TURBOAE_EXACT_TABLE1_BITS_3_98 = tf.constant(
    [
        [1, 0],
        [0, 1],
        [0, 0],
        [1, 1],
        [1, 1],
        [0, 0],
        [1, 1],
        [0, 0],
        [0, 1],
        [1, 0],
        [1, 1],
        [0, 0],
        [1, 0],
        [0, 1],
        [0, 0],
        [1, 1],
        [0, 1],
        [1, 0],
        [1, 1],
        [0, 0],
        [0, 0],
        [0, 1],
        [0, 0],
        [1, 1],
        [1, 0],
        [0, 1],
        [0, 0],
        [1, 1],
        [0, 1],
        [1, 0],
        [1, 1],
        [0, 0],
    ],
    dtype=tf.float32,
)
TURBOAE_EXACT_TABLE1_COMPOSITE = [
    (TURBOAE_EXACT_TABLE1_BITS_1_1, 1),
    (TURBOAE_EXACT_TABLE1_BITS_2_2, 1),
    (TURBOAE_EXACT_TABLE1_BITS_3_98, 96),
    (TURBOAE_EXACT_TABLE1_BITS_99_99, 1),
    (TURBOAE_EXACT_TABLE1_BITS_100_100, 1),
]

TURBOAE_EXACT_TABLE2_BITS_1_1 = tf.constant(
    [
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
    ],
    dtype=tf.float32,
)
TURBOAE_EXACT_TABLE2_BITS_2_2 = tf.constant(
    [
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
        [0],
        [1],
        [0],
        [0],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
        [0],
        [1],
        [0],
        [0],
        [1],
    ],
    dtype=tf.float32,
)
TURBOAE_EXACT_TABLE2_BITS_99_99 = tf.constant(
    [
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
    ],
    dtype=tf.float32,
)
TURBOAE_EXACT_TABLE2_BITS_100_100 = tf.constant(
    [
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
    ],
    dtype=tf.float32,
)
TURBOAE_EXACT_TABLE2_BITS_3_98 = tf.constant(
    [
        [1],
        [0],
        [0],
        [1],
        [0],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
        [0],
        [1],
        [0],
        [0],
        [1],
        [0],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
        [0],
        [1],
        [0],
        [0],
        [1],
        [1],
        [0],
        [0],
        [1],
    ],
    dtype=tf.float32,
)
TURBOAE_EXACT_TABLE2_COMPOSITE = [
    (TURBOAE_EXACT_TABLE2_BITS_1_1, 1),
    (TURBOAE_EXACT_TABLE2_BITS_2_2, 1),
    (TURBOAE_EXACT_TABLE2_BITS_3_98, 96),
    (TURBOAE_EXACT_TABLE2_BITS_99_99, 1),
    (TURBOAE_EXACT_TABLE2_BITS_100_100, 1),
]
